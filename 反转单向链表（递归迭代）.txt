/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     struct ListNode *next;
 * };
 */
 struct  ListNode* m_phead=NULL;
struct ListNode* reverseList(struct ListNode*  head ) {
       
      if(head==NULL||head->next==NULL)
    {
        return head;
        
    }
  struct  ListNode* headnode= reverseList(head->next);
    head->next->next=head;
    head->next=NULL;
    return headnode;     
}  
   /*
   现在需要把A->B->C->D进行反转，
可以先假设B->C->D已经反转好，已经成为了D->C->B,那么接下来要做的事情就是A指向空,A->next->next=A，所以问题转化了反转B->C->D。那么，
可以先假设C->D已经反转好，已经成为了D->C,那么接下来要做的事情就是将B指向空,B->next->next=B，所以问题转化了反转C->D。那么，
可以先假设D已经反转好，已经成为了D,那么接下来要做的事情就是C指向空,C->next->next=C所以问题转化了反转D。
   */